
def dockerBuild(){
   sh "docker build -t binueuginc/sample-myapp:${params.VERSION} ."
   echo "BUILD VERSION IS ${params.VERSION}"
   }
  def testApp(){
   echo "Testing application......"
   echo "BUILD VERSION IS ${params.VERSION}"
   }
   def dockerPush(){
   withCredentials([string(credentialsId: 'docker-pwd', variable: 'dockerHubPwd')]) {
       sh "docker -u binueuginc -p ${dockerHubPwd}"
      }
   sh "docker push binueuginc/sample-myapp:${params.VERSION}"
   echo "BUILD VERSION IS ${params.VERSION}"
   }
   def dockerDeployApp(){
    
	 sshagent(['dev-server']){
	   sh "ssh -o StrictHostKeyChecking=no root@192.168.115.245 ${env.DOCKERRUN}"
	   }
   echo "BUILD VERSION IS ${params.VERSION}"
   }
  def dockerEcsDeployApp(){
   echo "dockerEcsDeploy ......"
    sh "aws ecs register-task-definition --family ${env.TASK_FAMILY} --cli-input-json $(echo ${env.FINAL_TASK})" 
    sh "aws ecs update-service --service ${env.SERVICE_NAME} --task-definition ${env.TASK_FAMILY} --cluster ${env.CLUSTER_NAME}" 
   echo "BUILD VERSION ${params.VERSION} is Deploying AWS ES"
   }
  def dockerCleanup(){
   echo "docker Clean Up  ......"
   sh 'docker images  | awk \'!(NR<=1){print $1 ":" $2}\' | xargs docker rmi -f'
   }
return this
